/*
 * Copyright (c) 2017 by The Funfix Project Developers.
 * Some rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* @flow */

import type { Throwable } from "funfix-core"
import { IO } from "funfix-effect"
import {
  MonadError,
  monadErrorOf,
  Monad,
  monadOf,
  FlatMap,
  flatMapOf,
  ApplicativeError,
  applicativeErrorOf,
  Applicative,
  applicativeOf,
  Apply,
  applyOf,
  Functor,
  functorOf,
  IOInstances
} from "../../src/"

const functor1: Functor<IO<any>> = functorOf(IO)
const functor2: Functor<IO<any>> = IOInstances.global

const ap1: Apply<IO<any>> = applyOf(IO)
const ap2: Apply<IO<any>> = IOInstances.global

const applicative1: Applicative<IO<any>> = applicativeOf(IO)
const applicative2: Applicative<IO<any>> = IOInstances.global

const flatMap1: FlatMap<IO<any>> = flatMapOf(IO)
const flatMap2: FlatMap<IO<any>> = IOInstances.global

const apErr1: ApplicativeError<IO<any>, any> = applicativeErrorOf(IO)
const apErr2: ApplicativeError<IO<any>, Throwable> = IOInstances.global

const monad1: Monad<IO<any>> = monadOf(IO)
const monad2: Monad<IO<any>> = IOInstances.global

const monadErr1: MonadError<IO<any>, any> = monadErrorOf(IO)
const monadErr2: MonadError<IO<any>, Throwable> = IOInstances.global
